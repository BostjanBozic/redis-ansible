---

- name: Create Redis work directory
  file:
    path: "{{ redis_dir }}"
    state: directory
    recurse: yes
    owner: "{{ redis_user }}"

- name: Create Redis systemd service
  template:
    src: default/redis.service.j2
    dest: /etc/systemd/system/{{ redis_service_name }}.service
    mode: 0664
  register: redis_unit_file
  when:
    - redis_as_service
    - ansible_service_mgr|default() == "systemd"

- name: Create systemd tmpfiles configuration
  template:
    src: etc/tmpfiles.d/redis.conf.j2
    dest: /etc/tmpfiles.d/redis.conf
    mode: 0644
  when:
    - redis_as_service
    - ansible_service_mgr|default() == 'systemd'
    - (redis_pidfile|dirname).startswith('/var/run') or (redis_pidfile|dirname).startswith('/run')

- name: Reload systemd daemon
  systemd:
    daemon-reload: yes
  when:
    - redis_as_service

- name: Enable Redis service
  service:
    name: "{{ redis_service_name }}"
    enabled: yes
  when:
    - redis_as_service

- name: Create log directory if it does not exist
  file:
    path: "{{ redis_logfile|dirname }}"
    state: directory
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when:
    - redis_logfile != '""'

- name: Create log file
  file:
    path: "{{ redis_logfile }}"
    state: touch
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
  when:
    - redis_logfile != '""'

- name: Create Redis config file
  template:
    src: default/redis.config.j2
    dest: /etc/redis/{{ redis_port }}.conf
    owner: "{{ redis_user }}"
    mode: 0644
  notify: "Restart Redis service on port {{ redis_port }}"

- name: Flush handlers to apply config changes
  meta: flush_handlers

- name: Ensure that Redis is running
  service:
    name: "{{ redis_service_name }}"
    state: started
  when:
    - redis_as_service